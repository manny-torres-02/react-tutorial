{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\panamanny\\\\Documents\\\\Programming Practice\\\\react-app\\\\Module1\\\\base-syntax--assignment-problem\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport UserInput from './UserInput/UserInput.js';\nimport UserOutput from './UserOutput/UserOutput.js';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"MANNY \"\n    };\n\n    this.usernameHandler = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Create TWO new components: UserInput and UserOutput\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"UserInput should hold an input element, UserOutput two paragraphs\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Output multiple UserOutput components in the App component (any paragraph texts of your choice)\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Pass a username (of your choice) to UserOutput via props and display it there\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Add state to the App component (=> the username) and pass the username to the UserOutput component\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Add a method to manipulate the state (=> an event-handler method)\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Pass the event-handler method reference to the UserInput component and bind it to the input-change event\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Ensure that the new input entered by the user overwrites the old username passed to UserOutput\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Add two-way-binding to your input (in UserInput) to also display the starting username\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Add styling of your choice to your components/ elements in the components - both with inline styles and stylesheets\")), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"hi\"), React.createElement(UserInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"adsffasghgfgd\"), React.createElement(UserOutput, {\n      name: this.state.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(UserOutput, {\n      name: this.usernameHandler,\n      changed: this.usernameHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\panamanny\\Documents\\Programming Practice\\react-app\\Module1\\base-syntax--assignment-problem\\src\\App.js"],"names":["React","Component","UserInput","UserOutput","App","state","name","usernameHandler","event","setState","target","value","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;AACA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC5BI,KAD4B,GACpB;AACNC,MAAAA,IAAI,EAAC;AADC,KADoB;;AAAA,SAK5BC,eAL4B,GAKTC,KAAD,IAAW;AAC3B,WAAKC,QAAL,CAAc;AAACH,QAAAA,IAAI,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAApB,OAAd;AACD,KAP2B;AAAA;;AAS1BC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yGAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4GALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kHAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wGARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6HAVF,CADF,EAaC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbD,EAcC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAdD,EAeC,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAG,KAAKP,KAAL,CAAWC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfD,EAgBC,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAE,KAAKC,eAAvB;AAAwC,MAAA,OAAO,EAAE,KAAKA,eAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBD,CADF;AAoBD;;AA9ByB;;AAiC5B,eAAeH,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport UserInput from './UserInput/UserInput.js';\nimport UserOutput from './UserOutput/UserOutput.js';\nclass App extends Component {\nstate = {\n  name:\"MANNY \" \n}\n\nusernameHandler = (event) => {\n  this.setState({name: event.target.value});\n}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ol>\n          <li>Create TWO new components: UserInput and UserOutput</li>\n          <li>UserInput should hold an input element, UserOutput two paragraphs</li>\n          <li>Output multiple UserOutput components in the App component (any paragraph texts of your choice)</li>\n          <li>Pass a username (of your choice) to UserOutput via props and display it there</li>\n          <li>Add state to the App component (=> the username) and pass the username to the UserOutput component</li>\n          <li>Add a method to manipulate the state (=> an event-handler method)</li>\n          <li>Pass the event-handler method reference to the UserInput component and bind it to the input-change event</li>\n          <li>Ensure that the new input entered by the user overwrites the old username passed to UserOutput</li>\n          <li>Add two-way-binding to your input (in UserInput) to also display the starting username</li>\n          <li>Add styling of your choice to your components/ elements in the components - both with inline styles and stylesheets</li>\n        </ol>\n       <h1>hi</h1>\n       <UserInput>adsffasghgfgd</UserInput>\n       <UserOutput name= {this.state.name}></UserOutput>\n       <UserOutput name={this.usernameHandler} changed={this.usernameHandler}></UserOutput>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}